<link rel="stylesheet" type="text/css" href="style.css" />
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>

<div style="height:100vh;display:flex;">    
    <div class="main-bar">
            <img width="80%" src="wtc_logo_w.png"><br><br>
            <button id="createStat" onclick="openModal('createInput', 'createStat', 'createClose');" class="button1">Show Stat</button><br>
            <button class="button1">Compare Stats</button><br>
            <input type="text" id="InCohort" placeholder="Cohort"><br>
            <input type="text" id="InCampus" Placeholder="Campus"><br>
            <input type="text" id="InProject" Placeholder="Project"><br>
            <input type="text" id="InCohort2" placeholder="Cohort2"><br>
            <input type="text" id="InCampus2" Placeholder="Campus2"><br>
            <input type="text" id="InProject2" Placeholder="Project2"><br>
            <input type="text" id="InDate" Placeholder="Date"><br>
            <select id="InChart">
                    <option value="doughnut">Pie</option>
                    <option value="line">Line</option>
                    <option value="bar">Bar</option>
            </select>
            <br>
            <button onclick="GetUsers();">Test</button>
            <button onclick="GetProjects();">Test2</button>
            <br>
            <button onclick="GetProjectsChart();">Chart</button><br>
            <button onclick="GetProjectsChart2();">Chart-2</button><br>
            <button onclick="clean();">Clear</button><br>
    </div>

    <div id="createInput" class="modal">
      <div class="modal-content">
        <span onclick="closeModal('createInput');"class="close">cancel</span>
        <h2 style="color:white;font-sixze:2em;">Enter Data To Generate A Graph</h2>
        <p style="color:white;">Leave open if you want a wildcard</p>
      </div>
    </div>
    
<script>
function openModal(modalID) {
    var modal = document.getElementById(modalID);
    modal.style.display = "block";
}

function closeModal(modalID) {
    var modal = document.getElementById(modalID);
    modal.style.display = "none";
}

</script>
    <div id="mm" class="main-main">

            <div id="data">

            </div>
            <canvas id="myChart" style="width:100%;"></canvas> 
        
        <div style="display:none;">
        <!-- <div class="card"> -->
                <!-- <p>STUDENTS</p> -->
                <!-- <p style="color:#1190F2;font-size:3em;" id="students"></p> -->
        <!-- </div> -->
        <!-- <div class="card"> -->
                <!-- <p>SCORE</p> -->
        <!-- </div>    -->
        </div>
    </div>
            
            <script>

                // fetch(`https://wtc-internal-server-production.herokuapp.com/api/users`, {
                    // method: "GET",
                    // headers: {
                    // "content-type": "application/json"
                    // }
                // })
                // .then(response => response.json())
                // .then(ans => document.getElementById("students").innerHTML = ans.data.getAllUsers.length)
                // .then(secondCall());
                    // 
                function secondCall() {
                    fetch(`https://wtc-internal-server-production.herokuapp.com/api/Modules`, {
                        method: "GET",
                        headers: {
                        "content-type": "application/json"
                        }
                    })
                    .then(response => response.json())
                    .then(ans => calcScore(ans.data.getAllModules));
                }

                function calcScore(data) {
                    var score = 0;
                    var total = data.length * 125;
                    for (i = 0; i < data.length; i++) {
                        score += data[i].final_mark;
                    }
                    document.getElementById("score").innerHTML = total + "<br>" + score;
                }

            </script>

</div>



<script>
    function clean() {
        location.reload();
    } 

    function GetUsers() {
    var cohort = document.getElementById("InCohort").value;
    var campus = document.getElementById("InCampus").value;
    var usernames = fetch(`https://serverlivetest.herokuapp.com/api/users?cohort=${cohort}&campus=${campus}`, {
        method: "GET",
        headers: {
            "content-type": "application/json"
        }
    })
    .then(response => response.json())
    .then(ans => fPrint(ans.data.getAllUsers))
    }

    function GetProjects() {
    var cohort = document.getElementById("InCohort").value;
    var campus = document.getElementById("InCampus").value;
    var usernames = fetch(`https://serverlivetest.herokuapp.com/api/modules?module_name=camagru`, {
        method: "GET",
        headers: {
            "content-type": "application/json"
        }
    })
    .then(response => response.json())
    .then(ans => fiPrint(ans.data.getAllModules))
    }

    function GetProjectsChart() {
    
    var campus = document.getElementById("InCampus").value;
    var cohort = document.getElementById("InCohort").value;
    var project = document.getElementById("InProject").value;
    // date = new Date (document.getElementById("InDate").value).getDate;
    var usernames = fetch(`https://wtc-internal-server-production.herokuapp.com/api/modules?module_name=${project}&campus=${campus}&cohort=${cohort}`, {
        method: "GET",
        headers: {
            "content-type": "application/json"
        }
    })
    .then(response => response.json())
    .then(ans => chart(ans.data.getAllModules))
    }
    

    function chart(data) {
        var full = 0;
        var none = 0;
        var amazing = 0;
        var high = 0;
        var mid = 0;
        var low = 0;
        var amt = 0;
    console.log(data);
        for (i = 0; i < data.length; i++) {
            amt++;
            if (data[i].final_mark == 0) {
                none++;
            } else
            if ((data[i].final_mark > 0) && (data[i].final_mark < 40)) {
                low++;
            } else if ((data[i].final_mark >= 40) && (data[i].final_mark < 80)) {
                 mid++;
            } else if ((data[i].final_mark >= 80) && (data[i].final_mark < 100)) {
                high++;
            } else if ((data[i].final_mark >= 100) && (data[i].final_mark < 125)) {
                amazing++;
            } else if (data[i].final_mark == 125) {
                full++;
            }
        }

        document.getElementById("data").innerHTML = "<p  class='r'>"+amt+" : User's Data </p>";
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: document.getElementById("InChart").value,
            data: {
                labels: ['0', '1-40', '40-80', '80-100', '100-125', '125'],
                datasets: [{
                    label: 'Performance',
                    showLine: true,
                    pointRadius: 10,
                    pointHoverRadius: 15,
                    fill: true,
                    hoverOuterGlowWidth: 20,
                    hoverOuterGlowWidth: 'rgb(255, 255, 255)',
                    
                    data: [none, low, mid, high, amazing, full] ,
                    backgroundColor: [
                        'rgba(255, 102, 102, 80)',
                        'rgba(255, 226, 102, 80)',
                        'rgba(150, 255, 102, 80)',
                        'rgba(102, 255, 183, 80)',
                        'rgba(102, 229, 255, 80)',
                        'rgba(255, 102, 155, 80)',

                    ],
                    borderColor: [
                        'white',
                        'white',
                        'white',
                        'white',
                        'white',
                        'white',
                    ],
                    borderWidth: 5
                }]
            },
            options: {
                responsive: true,
            }
        });
    }



function GetProjectsChart2() {
    
    var campus = document.getElementById("InCampus").value;
    var cohort = document.getElementById("InCohort").value;
    var project = document.getElementById("InProject").value;

    var campus2 = document.getElementById("InCampus2").value;
    var cohort2 = document.getElementById("InCohort2").value;
    var project2 = document.getElementById("InProject2").value;
    // date = new Date (document.getElementById("InDate").value).getDate;
    var usernames = fetch(`https://wtc-internal-server-production.herokuapp.com/api/modules?module_name=${project}&campus=${campus}&cohort=${cohort}`, {
        method: "GET",
        headers: {
            "content-type": "application/json"
        }
    })
    .then(response => response.json())
    .then(ans => secondCallData(ans, campus2, cohort2, project2))
    }

    function secondCallData(prevAns, campus, cohort, project) {
        var usernames = fetch(`https://wtc-internal-server-production.herokuapp.com/api/modules?module_name=${project}&campus=${campus}&cohort=${cohort}`, {
        method: "GET",
        headers: {
            "content-type": "application/json"
        }
    })
    .then(response => response.json())
    .then(ans => chart2(ans.data.getAllModules, prevAns.data.getAllModules))

    }
    

    function chart2(data1, data2) {
        var full = 0;
        var none = 0;
        var amazing = 0;
        var high = 0;
        var mid = 0;
        var low = 0;
        var amt = 0;

        var fullA = 0;
        var noneA = 0;
        var amazingA = 0;
        var highA = 0;
        var midA = 0;
        var lowA = 0;
        var amtA = 0;

        var full2 = 0;
        var none2 = 0;
        var amazing2 = 0;
        var high2 = 0;
        var mid2 = 0;
        var low2 = 0;
        var amt2 = 0;

        for (i = 0; i < data1.length; i++) {
            amt++;
            if (data1[i].final_mark == 0) {
                none++;
            } else
            if ((data1[i].final_mark > 0) && (data1[i].final_mark < 40)) {
                low++;
            } else if ((data1[i].final_mark >= 40) && (data1[i].final_mark < 80)) {
                 mid++;
            } else if ((data1[i].final_mark >= 80) && (data1[i].final_mark < 100)) {
                high++;
            } else if ((data1[i].final_mark >= 100) && (data1[i].final_mark < 125)) {
                amazing++;
            } else if (data1[i].final_mark == 125) {
                full++;
            }
        }
        none = ((none/data1.length)*100).toFixed(2);
        low = ((low/data1.length)*100).toFixed(2);
        mid = ((mid/data1.length)*100).toFixed(2);
        high = ((high/data1.length)*100).toFixed(2);
        amazing = ((amazing/data1.length)*100).toFixed(2);
        full = ((full/data1.length)*100).toFixed(2);
        

        for (i = 0; i < data2.length; i++) {
            amt++;
            if (data2[i].final_mark == 0) {
                none2++;
            } else
            if ((data2[i].final_mark > 0) && (data2[i].final_mark < 40)) {
                low2++;
            } else if ((data2[i].final_mark >= 40) && (data2[i].final_mark < 80)) {
                 mid2++;
            } else if ((data2[i].final_mark >= 80) && (data2[i].final_mark < 100)) {
                high2++;
            } else if ((data2[i].final_mark >= 100) && (data2[i].final_mark < 125)) {
                amazing2++;
            } else if (data2[i].final_mark == 125) {
                full2++;
            }
        }

        none2= ((none2/data2.length)*100).toFixed(2);
        low2 = ((low2/data2.length)*100).toFixed(2);
        mid2 = ((mid2/data2.length)*100).toFixed(2);
        high2= ((high2/data2.length)*100).toFixed(2);
        amazing2 = ((amazing2/data2.length)*100).toFixed(2);
        full2 = ((full2/data2.length)*100).toFixed(2);

        noneA = ((parseFloat(none) + parseFloat(none2))/2);
        lowA = ((parseFloat(low) + parseFloat(low2))/2);
        midA = ((parseFloat(mid) + parseFloat(mid2))/2);
        highA = ((parseFloat(high) + parseFloat(high2))/2);
        amazingA = ((parseFloat(amazing) + parseFloat(amazing2))/2);
        fullA = ((parseFloat(full) + parseFloat(full2))/2);

        document.getElementById("data").innerHTML = "<p  class='r'>"+amt+" : User's Data </p>";
        var ctx = document.getElementById('myChart').getContext('2d');

        var chartData = {
            labels: ["0", "1-39", "40-79", "80-99", "100-124", "125"],
            datasets: [{
                label: "My Second dataset",
                fill: true,
                backgroundColor: "rgba(17, 144, 242, 0.2)",
                fontSize: 50,
                borderWidth:3,
                borderColor: "rgba(17, 144, 242, 0.8)",
                data: [none, low, mid, high, amazing, full]
            },
             {
                label: "My First dataset",
                fill: true,
                backgroundColor: "rgba(252, 83, 83, 0.2)",
                fontSize: 50,
                borderWidth:3,
                borderColor: "rgba(252, 83, 83, 0.8)",
                data: [none2, low2, mid2, high2, amazing2, full2]
            },
            {
                label: "Average",
                fill: false,
                borderDash: [5, 5],
                backgroundColor: "rgba(0, 0, 0, 0.2)",
                fontSize: 50,
                borderWidth:2,
                borderColor: "rgba(0, 0, 0, 0.8)",
                data: [noneA, lowA, midA, highA, amazingA, fullA]
            }]
};          

        var myChart = new Chart(ctx, {
            type: "line",
            data: chartData,
            options: {
                responsive: true,
                stacked: false,
            }
        });
    }


    function fiPrint(data) {
        for (i = 0; i < data.length;i++) {
            document.getElementById("data").innerHTML += "<p  class='r'>"+data[i].final_mark+" "+data[i].username+"</p>";
        }
    }

    function fPrint(data) {
        for (i = 0; i < data.length;i++) {
            document.getElementById("data").innerHTML += "<p  class='r'>"+data[i].username+"</p>";
        }
    }
</script>
